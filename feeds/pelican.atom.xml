<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>not great yet useful</title><link href="http://ngyu.github.io/" rel="alternate"></link><link href="http://ngyu.github.io/feeds/pelican.atom.xml" rel="self"></link><id>http://ngyu.github.io/</id><updated>2011-12-03T10:20:00+01:00</updated><entry><title>GitHub Pages using Pelican in ubuntu</title><link href="http://ngyu.github.io/posts/2011/12/03/GitHub-Pages-using-Pelican-in-ubuntu/" rel="alternate"></link><updated>2011-12-03T10:20:00+01:00</updated><author><name>ngyu</name></author><id>tag:ngyu.github.io,2011-12-03:posts/2011/12/03/GitHub-Pages-using-Pelican-in-ubuntu/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;virtual Python environments&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;install pip before installing virtualenv&lt;/h1&gt;
&lt;h1&gt;install pip by typing:&lt;/h1&gt;
&lt;p&gt;sudo apt-get install python-pip&lt;/p&gt;
&lt;h1&gt;Install virtualenv via pip:&lt;/h1&gt;
&lt;p&gt;pip install virtualenv&lt;/p&gt;
&lt;h1&gt;install ‘virtualenv' by typing:&lt;/h1&gt;
&lt;p&gt;sudo apt-get install python-virtualenv&lt;/p&gt;
&lt;h1&gt;create a new virtual environment called ‘pelican' for Pelican, and activate it&lt;/h1&gt;
&lt;p&gt;virtualenv ~/virtualenvs/pelican
cd ~/virtualenvs/pelican
source bin/activate&lt;/p&gt;
&lt;p&gt;＃Once the virtual environment has been created and activated, Pelican can be be installed via:
pip install pelican&lt;/p&gt;
&lt;h1&gt;Optional packages for using Markdown,  Typographical enhancements, you’ll need to install the two libraries:&lt;/h1&gt;
&lt;p&gt;pip install Markdown
pip install typogrify&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a project&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;choose a name for your project, create an appropriately-named directory for your site, and switch to that directory&lt;/h1&gt;
&lt;p&gt;mkdir -p ngyu
cd ngyu&lt;/p&gt;
&lt;h1&gt;create a skeleton project via the pelican-quickstart command:&lt;/h1&gt;
&lt;p&gt;pelican-quickstart
...
Welcome to pelican-quickstart v3.5.0.
This script will help you create a new Pelican-based website.
Please answer the following questions so this script can generate the files needed by Pelican.
...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create an article&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;You cannot run Pelican until you have created some content. Use your preferred text editor to create your first article:&lt;/h1&gt;
&lt;h1&gt;~/projects/yoursite/content/keyboard-review.md&lt;/h1&gt;
&lt;p&gt;Title: My First Review
Date: 2010-12-03 10:20
Category: Review&lt;/p&gt;
&lt;p&gt;Following is a review of my favorite mechanical keyboard.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Generate and preview your site locally&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;From your project directory, run the pelican command to generate your site:&lt;/h1&gt;
&lt;p&gt;pelican content&lt;/p&gt;
&lt;h1&gt;Open a new terminal session and&lt;/h1&gt;
&lt;h1&gt;run the following commands to switch to your output directory and launch Python’s built-in web server:&lt;/h1&gt;
&lt;p&gt;cd ~/projects/yoursite/output
python -m SimpleHTTPServer&lt;/p&gt;
&lt;h1&gt;Preview your site by navigating to http://localhost:8000/ in your browser.&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Publishing to GitHub&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;create a repository following the instructions on https://pages.github.com/&lt;/h1&gt;
&lt;h1&gt;Go to the folder where you want to store your project, and clone the new repository:&lt;/h1&gt;
&lt;p&gt;git clone https://github.com/username/username.github.io&lt;/p&gt;
&lt;h1&gt;to the ‘output' directory, initialize a git repo.&lt;/h1&gt;
&lt;h1&gt;Add a remote pointing to the repo created on GitHub (username.github.io),&lt;/h1&gt;
&lt;h1&gt;add all the files you want to commit, commit, and push changes to the remote repository.&lt;/h1&gt;
&lt;p&gt;$ cd output
$ git init
$ git remote add origin https://github.com/username/username.github.io.git
$ git add --all
$ git commit -m "commit message"
$ git push origin master&lt;/p&gt;
&lt;h1&gt;update local file from remote&lt;/h1&gt;
&lt;p&gt;cd output
git pull origin master&lt;/p&gt;
&lt;h1&gt;update site from local&lt;/h1&gt;
&lt;p&gt;cd
cd blog
pelican -s pelicanconf.py content -o output
cd output
git add .
git commit -m "Update"
git push&lt;/p&gt;</summary><category term="Pelican"></category><category term="GitHub"></category></entry></feed>